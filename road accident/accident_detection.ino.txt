char john; char l [6];
char *text = "ACCIDENT MESSAGE";
char txt [5];
char check [] ="$GPRMC";
char temp; char arr [70];
char Nav [] ="NAVIGATION"; char Lat [] ="LATITUDE”; char Dir [] ="DIRECTION”; char lo [] ="LONGITUDE";
char sp [] ="SPEED";
char baud [] ="AT”; char modsel [] ="AT+CMGF=1”; char message enters [] ="AT+CSCA=+251911299704";
char message [] ="AT+CMGS=+251917025257";
char back [] =">";
char fit [] ="ok";
unsigned int temp_res;
unsigned short kp, cnt;
char er [] ="error";
int b, I, j, V, n, k, t, la, byte read, starred, data, dr, lg, sd, dat, datf, lal, cnt=0;
void ying () {
  TRISB = 0;
  Lcd_Custom_Config (&PORTB,7,6,5,4, &PORTB,2,0,3);
  Lcd_Custom_Cmd (Lcd_CURSOR_OFF);
  Lcd_Custom_Out (1, 1, text);
}
void bona ()
{cnt = 0;
  Keypad_Init(&PORTC);
  Lcd_Init(&PORTB);
  Lcd_Cmd (LCD_CLEAR);
  Lcd_Cmd (LCD_CURSOR_OFF);
  Lcd_Out (1, 1, "Key:");
Lcd_Out (2, 1, "Times:");
  do {
    kp = 0;
    //--- Wait for key to be pressed
    do
      //--- un-comment one of the keypads reading functions
      kp = Keypad Released ();
      //kp = Keypad Read ();
    while (! kp);
    cnt++;
    //--- prepare value for output
    if (kp > 10)
      kp += 54;
    else
      kp += 47;
   //--- print it on LCD
    Lcd_Chr (1, 10, kp);
    WordToStr (cnt, txt);
    Lcd_Out (2, 10, txt);
  } while (1);
Usart_Write('G'); Usart_Write('P'); Usart_Write('S'); Usart_Write (' '); Usart_Write('F'); Usart_Write('I'); Usart_Write('X');
    Usart_Write (10);
    Usart_Write (13);
    I=0;
Usart_write('T'); Usart_write('I'); Usart_write('M'); Usart_write('E'); Usart_write ('=');
            t++;
                 for (k=t; k<n; k++)
                 {
                   Usart_write(arr[k]);
                 }
Usart_Write (10);
Usart_Write (13);
Usart_write('N'); Usart_write('A'); Usart_write('V'); Usart_write('I'); Usart_write('G');
Usart_write('A'); Usart_write('T'); Usart_write('I'); Usart_write('O'); Usart_write('N');
            Usart_write ('=');
            n++;
              for (k=n; k<la; k++)
              {
                Usart_write(arr[k]);}
Usart_Write (10);
Usart_Write (13);
 Usart_write('L'); Usart_write('A'); Usart_write('T'); Usart_write('I');
 Usart_write('T'); Usart_write('U'); Usart_write('D'); Usart_write('E');
            Usart_write ('=');
            la++;
               for (k=la; k<dr; k++)
               {
                  Usart_write(arr[k]);}
Usart_Write (10);
Usart_Write (13);
           // for (V=0; V<10; V++)
         {
              Usart_write(dir.[V]);
        }
 Usart_write('D'); Usart_write('I'); Usart_write('R'); Usart_write('E');
  Usart_write('C'); Usart_write('T'); Usart_write('I'); Usart_write('O'); Usart_write('N');
            Usart_write ('=');
           dr++;
               for (k=dr; k<lg; k++)
               {Usart_write(arr[k]);}
Usart_Write (10);
Usart_Write (13);
         // for (V=0; V<10; V++)
           {
           Usart_write(lo[V]);
          }
Usart_write('L'); Usart_write('O'); Usart_write('N'); Usart_write('G');
Usart_write('I'); Usart_write('T'); Usart_write('U'); Usart_write('D'); Usart_write('E');
           Usart_write ('=');
           lg++;
           for (k=lg; k<sd; k++)
               {
              Usart_write(arr[k]);}
Usart_Write (10);
Usart_Write (13);
         // for (V=0; V<6; V++)
// {Usart_write(sp[V]);
//         }
   Usart_write('S'); Usart_write('P'); Usart_write('E');
   Usart_write('E'); Usart_write('D');
         Usart_write ('=');
         sd++;
         for (k=sd; k<dat; k++)
               {Usart_write(arr[k]);}
Usart_Write (10);
Usart_Write (13);
         Usart_write('D'); Usart_write('A'); Usart_write('T'); Usart_write('E');
         Usart_write ('=');
         dat++;
         for (k=dat; k<datf; k++)
               {Usart_write(arr[k]);}
}
  void land (char *t)
     {for (b=0; b<strlen(t); b++)
      {Usart_Write(t[b]);
          data = usart_Read ();
          usart_write(dat);
 Delay_ms (100);
      } b++;
       Usart_Write (10);
       {dat=I;}
       else if(cnt==10)
       {datf=I;}}
       I++;
       ying ();}
} k=n; k++;
   if(arr[k]! ='A')
   {
    Go to label;
   //break;
   } I=0;
  while(I<6)
      {if(arr[I]! =check[I])
      {got label;
     // break;
      } I++;
     } if (I==6) {
TRISC=0b00000000;	
PORTC = 0b11110000;
Usart_Init (9600);
Usart_read ();
Delay_ms (100);
lan(modsel);
verify(fit);
  //PORTC=0b01000000;
lan (message enter);
 // PORTC=0b00100000;
verify(fit);
lan(message);
//PORTC=0b00010000;
verify(back);
 bona ();} 
label: I=0, cnt=0;}}}
